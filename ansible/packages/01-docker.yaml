- name: install docker
  hosts: host
  become: yes
  gather_facts: yes
  tasks:
    - name: check gpg
      package:
        name: gpg
        state: present
      when: ansible_facts['os_family'] == "Debian"

    - name: add GPG key (Debian OS)
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_facts['os_family'] == "Debian"

    - name: add docker repository to apt (Debian OS)
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
      when: ansible_facts['os_family'] == "Debian"

    - name: install epel-release
      package:
        name:
          - epel-release.noarch
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    - name: install a dependency (RedHat OS)
      package:
        name:
          - yum-utils
        state: present
        update_cache: yes
      when: ansible_facts['os_family'] == "RedHat"

    - name: Add Docker repo (RedHat)
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
      when: ansible_facts['os_family'] == "RedHat"

    - name: Install Docker
      package:
        name: docker-ce
        state: latest

    - name: Docker start and enable
      systemd:
        name: docker
        state: started
        enabled: true

    - name: adding existing user "{{ ansible_user }}" to group docker
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: install pip
      package:
        name: pip
        state: present

    - name: install dependicies
      package:
        name:
          - python3-pip
          - python3
        state: latest


    - name: "pip"
      become: false
      pip:
        name: docker
        state: forcereinstall
        executable: pip3
    - name: "pip"
      become: false
      pip:
        name: docker-compose
        state: forcereinstall
        executable: pip3